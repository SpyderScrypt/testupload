{"version":3,"sources":["components/Navbar/Navbar.js","components/ParticleBoldy/ParticleBody.js","components/HeroText/HeroText.js","components/Team/Team.js","components/InstagramFeed/InstagramFeed.js","components/Footer/Footer.js","App.js","serviceWorker.js","components/PageNotFound/PageNotFound.js","router/Router.js","index.js"],"names":["Navbar","react_default","a","createElement","className","src","this","props","logoPath","alt","height","width","title","map","href","concat","link","Component","ParticleBody","id","particles_default","params","particles","number","value","density","enable","value_area","color","shape","type","stroke","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","HeroText","Team","InstagramFeed","es","url","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","Footer","class","aria-hidden","App","Navbar_Navbar","ParticleBody_ParticleBody","HeroText_HeroText","Team_Team","InstagramFeed_InstagramFeed","Footer_Footer","Boolean","window","location","hostname","match","PageNotFound","Router","react_router_dom","basename","process","react_router","exact","path","component","ReactDOM","render","router_Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b1af8c2f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./stylesheet/NavbarStyle.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Navbar extends Component {\n  render() {\n    return (\n      <div className=\"navbarContainer\">\n        <div className=\"logoContainer\">\n          <img src={this.props.logoPath} alt=\"\" height=\"100%\" width=\"100%\" />\n        </div>\n        <div className=\"linksContainer\">\n          {this.props.title.map(title => {\n            return (\n              <p className=\"linksContainer\">\n                <a href={`${title.link}`} className=\"links\">\n                  {title.title}\n                </a>\n              </p>\n            );\n          })}\n          <p className=\"linksContainer\">\n            <a href=\"http://www.blog.sscrypts.com/\" className=\"links\">Blog</a>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Particles from \"react-particles-js\";\nimport \"./stylesheet/ParticleBody.css\";\n\nexport default class ParticleBody extends Component {\n  render() {\n    return (\n      <div className=\"particleContainer\"  id=\"home\">\n        <Particles\n          height=\"90vh\"\n          params={{\n            particles: {\n              number: {\n                value: 150,\n                density: {\n                  enable: true,\n                  value_area: 1000\n                }\n              },\n              color: {\n                value: [\"#aa73ff\", \"#f8c210\", \"#83d238\", \"#33b1f8\"]\n              },\n\n              shape: {\n                type: \"circle\",\n                stroke: {\n                  width: 0,\n                  color: \"#fff\"\n                },\n                polygon: {\n                  nb_sides: 9\n                }\n              },\n              opacity: {\n                value: 0.1,\n                random: false,\n                anim: {\n                  enable: false,\n                  speed: 2,\n                  opacity_min: 0.1,\n                  sync: false\n                }\n              },\n              size: {\n                value: 6,\n                random: true,\n                anim: {\n                  enable: false,\n                  speed: 40,\n                  size_min: 0.1,\n                  sync: false\n                }\n              },\n              line_linked: {\n                enable: true,\n                distance: 120,\n                color: \"#ffffff\",\n                opacity: 0.06,\n                width: 1\n              }\n            },\n            interactivity: {\n              detect_on: \"canvas\",\n              events: {\n                onhover: {\n                  enable: true,\n                  mode: \"grab\"\n                },\n                onclick: {\n                  enable: false\n                },\n                resize: true\n              },\n              modes: {\n                grab: {\n                  distance: 240,\n                  line_linked: {\n                    opacity: 0.2\n                  }\n                },\n                bubble: {\n                  distance: 400,\n                  size: 40,\n                  duration: 2,\n                  opacity: 8,\n                  speed: 3\n                },\n                repulse: {\n                  distance: 200,\n                  duration: 0.4\n                },\n                push: {\n                  particles_nb: 4\n                },\n                remove: {\n                  particles_nb: 2\n                }\n              }\n            },\n            retina_detect: true\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./stylesheet/HeroText.css\";\nexport default class HeroText extends Component {\n  render() {\n    return (\n      <div className=\"heroTextContainer\">\n        <p className=\"heroTitleText\">SpiderScrypt</p>\n        <p className=\"heroSubText\">\n          Integration of latest Tech and pure passion\n        </p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./stylesheet/Team.css\";\nexport default class Team extends Component {\n  render() {\n    return (\n      <div id=\"team\">\n        <p className=\"teamTitle\">Our Team</p>\n        <div className=\"teamFlexContainer\">\n          <div className=\"teamImages\">\n            <a className=\"teamDescription\" href=\"www.google.com\">\n              Akash Salunkhe\n            </a>\n            <a\n              className=\"teamDescription\"\n              href=\"https://medium.com/@spiderscrypt\"\n            >\n              Profile Link\n            </a>\n          </div>\n          <div className=\"teamImages\">\n            <a className=\"teamDescription\" href=\"www.google.com\">\n              Akash Salunkhe\n            </a>\n            <a\n              className=\"teamDescription\"\n              href=\"https://medium.com/@spiderscrypt\"\n            >\n              Profile Link\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport InstagramEmbed from \"react-instagram-embed\";\nimport \"./stylesheet/InstagramFeedStyle.css\";\nexport default class InstagramFeed extends Component {\n  render() {\n    // const options = {\n    //   accessToken: \"6f7025d2983a47e0860441c9075a3bf3\",\n    //   clientId: \"f52a6e1cb4f14684a202ef456558cfb1\",\n    //   get: \"akash.salunkhe1\", // popular, user\n    //   locationId: null,\n    //   resolution: \"standard_resolution\", // thumbnail, low_resolution, standard_resolution\n    //   sortBy: \"none\", // none, least-commented, least-liked, least-recent, most-commented, most-liked, most-recent, random\n    //   tagName: null,\n    //   userId: 123\n    // };\n\n    return (\n      <div className=\"instagramFeedPageContainer\" id=\"instagram\">\n        <p className=\"instagramTitle\">Latest Instagram Posts</p>\n\n        <div className=\"instagramPostContainer\">\n          <div className=\"instagram-post\">\n            <InstagramEmbed\n              url=\"https://www.instagram.com/p/BumIxxyhBNk\"\n              maxWidth={320}\n              hideCaption={true}\n              containerTagName=\"span\"\n              protocol=\"\"\n              injectScript\n              onLoading={() => {}}\n              onSuccess={() => {}}\n              onAfterRender={() => {}}\n              onFailure={() => {}}\n            />\n          </div>\n          <div className=\"instagram-post\">\n            <InstagramEmbed\n              url=\"https://www.instagram.com/p/BqaA2ZZDlfw\"\n              maxWidth={320}\n              hideCaption={true}\n              containerTagName=\"span\"\n              protocol=\"\"\n              injectScript\n              onLoading={() => {}}\n              onSuccess={() => {}}\n              onAfterRender={() => {}}\n              onFailure={() => {}}\n            />\n          </div>\n          <div className=\"instagram-post\">\n            <InstagramEmbed\n              url=\"https://www.instagram.com/p/BqfPUk6DP2f\"\n              maxWidth={320}\n              hideCaption={true}\n              containerTagName=\"span\"\n              protocol=\"\"\n              injectScript\n              onLoading={() => {}}\n              onSuccess={() => {}}\n              onAfterRender={() => {}}\n              onFailure={() => {}}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport \"./stylesheet/Footer.css\";\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <div className=\"footerContainer\" id=\"footer\">\n        <div className=\"contactContainer\">\n          <div className=\"contactField\">\n            <i class=\"fa fa-envelope fa-2x\" aria-hidden=\"true\" />\n            <p className=\"contactText\">spiderscrypt@gmail.com</p>\n          </div>\n          <div className=\"contactField\">\n            <i class=\"fa fa-phone-square fa-2x\" aria-hidden=\"true\" />\n\n            <p className=\"contactText\">7021889082</p>\n          </div>\n          <div className=\"contactField\">\n            <i class=\"fa fa-instagram fa-2x\" aria-hidden=\"true\" />\n\n            <a\n              className=\"instagramLink\"\n              href=\"https://www.instagram.com/spiderscrypt\"\n            >\n              <p className=\"contactText\">spiderscrypt</p>\n            </a>\n          </div>\n        </div>\n        <div className=\"aboutContainer\">\n          <p>About Us -</p>\n          <p>\n            We help clients bring their product concepts to life. Whether you’re\n            a startup creating a proof of concept to help with funding or just\n            owns a business that needs a website or just a computer science\n            student that need help with their project and project idea.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar/Navbar\";\n\nimport \"./App.css\";\nimport ParticleBody from \"./components/ParticleBoldy/ParticleBody\";\nimport HeroText from \"./components/HeroText/HeroText\";\nimport Team from \"./components/Team/Team\";\nimport InstagramFeed from \"./components/InstagramFeed/InstagramFeed\";\nimport Footer from \"./components/Footer/Footer\";\n\nclass App extends Component {\n  render() {\n\n    let titleObj = [\n      {\n        title:\"Home\",\n        link:\"#home\"\n      },\n      {\n        title:\"Team\",\n        link:\"#team\"\n      },\n      {\n        title:\"Instagram Feed\",\n        link:\"#instagram\"\n      },\n      {\n        title:\"Contact Us\",\n        link:\"#footer\"\n      },\n      \n    ]\n\n    return (\n      <div className=\"App\">\n        <Navbar logoPath=\"./images/spider.png\" title = {titleObj} />\n        <ParticleBody />\n        <HeroText />\n        <Team />\n        <InstagramFeed />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class PageNotFound extends Component {\n  render() {\n    return (\n      <div>\n        <h1>404</h1>\n        <p>Page not found</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport App from \"../App\";\nimport PageNotFound from \"../components/PageNotFound/PageNotFound\";\n\nclass Router extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={App} />\n          <Route exact path=\"/unknown\" component={PageNotFound} />\n          <Route path=\"*\" component={PageNotFound} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default Router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Router from './router/Router';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}